---
title: "Rapport de laboratoire 5"
subtitle: "MTH8211"
author:
  - name: Hortense Beaudoin
    email: hortense.beaudoin@polymtl.ca
    affiliation:
      - name: Polytechnique Montréal
format:
  pdf:
    keep-tex: false
    documentclass: article
    include-in-header:
      - text: |
            \usepackage{xspace}
            \usepackage[francais]{babel}
    geometry:
      - margin=1in
    papersize: letter
    colorlinks: true
    urlcolor: blue
engine: julia
---

```{julia}
#| output: false
using Pkg
Pkg.activate("labo5_env")
Pkg.add("Krylov")
Pkg.add("SuiteSparseMatrixCollection")
Pkg.add("MatrixMarket")

using LinearAlgebra
using MatrixMarket
using Krylov, SuiteSparseMatrixCollection
```

# Contexte

Dans ce laboratoire, on demande de valider le théorème de Murphy, Golub et Wathen sur le préconditionneur idéal pour les matrices de point de selle.
On se réfèrera aux carnets Jupyter vus en laboratoire pour les extraits de code pertinents.

# Questions

Choisir une matrice $A$ rectangulaire dans la `SuiteSparseMatrixCollection` et former la matrice de point de selle $K$ ainsi qu'un membre de droite.
Implémenter le préconditionneur idéal basé sur le complément de Schur.
Résoudre le système préconditionné avec MINRES et valider que le solveur s'arrête en (environ) 3 itération.

```{julia}
using SparseArrays

ssmc = ssmc_db()
pb = ssmc_matrices(ssmc, "", "ash219")
path = fetch_ssmc(pb, format="MM")
path_mtx = path[1]
A = MatrixMarket.mmread(joinpath(path_mtx, "ash219.mtx"))

m, n = size(A)
b = ones(m)
K = [I A ;
     A' spzeros(n, n)]
rhs = [b ; zeros(n)];
```

```{julia}
struct Precond
    m::Int
    n::Int
    LLt::SparseArrays.CHOLMOD.Factor{Float64, Int64}
end
```

```{julia}
import LinearAlgebra.ldiv!

function ldiv!(y, Pinv::Precond, b)
    m = Pinv.m
    n = Pinv.n
    y[1:m] = b[1:m]
    y[m+1:end] = Pinv.LLt \ b[m+1:end]

    return y
end
```

```{julia}
P = Precond(size(A,1), size(A,2), cholesky(A'*A))

 (x, stats) = minres(K, rhs; history=true, M=P, ldiv=true)
```

On constate que le système est en effet résolu (*solve*) en 2 itérations. 